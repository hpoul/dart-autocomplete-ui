// Auto-generated from example.html.
// DO NOT EDIT.

library example_html;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'dart:html';

import 'package:autocomplete_ui/input_autocomplete.dart';

import 'lib/input_autocomplete_component_proxy.dart';


// Original code
var exampleData = new ExampleData();
var exampleDatasource = new ExampleDatasource(exampleData.autocompleteChoices);

void main() {
}


class ExampleData {
  
  List<String> get autocompleteChoices {
    return ['Test 1', 'Test 2', 'Misc', 'Abcdef', 'Haha', 'Lorem Ipsum', 'Testing 3']..sort();
  }
}




class ExampleDatasource extends SimpleStringDatasource {
  ExampleDatasource(givenChoices) : super(givenChoices);

  Future<Collection<AutocompleteChoice>> query(String query) {
    var completer = new Completer<Collection<AutocompleteChoice>>();
    var future = super.query(query);
    window.setTimeout(() {
      future.then((coll) => completer.complete(coll));
    }, 1000);
    return completer.future;
  }
}


// Additional generated code
/** Create the views and bind them to models. */
void init_autogenerated() {
  var _root = autogenerated_html.document.body;
  autogenerated_html.UnknownElement __e0;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  autogenerated_html.UnknownElement __e1;
  


  // Initialize fields.
  __e0 = _root.query('#__e-0');
  __stoppers1 = [];
  new InputAutocompleteComponentProxy.forElement(__e0)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  __e1 = _root.query('#__e-1');
  new InputAutocompleteComponentProxy.forElement(__e1)
  ..created_autogenerated()
  ..created()
  ..composeChildren();
  

  // Attach model to views.
  __stoppers1.add(autogenerated.watchAndInvoke(() => exampleData.autocompleteChoices, (__e) { __e0.xtag.choices = __e.newValue; }));
  
  __e0.xtag..inserted()
  
  ..inserted_autogenerated();
  
  __stoppers1.add(autogenerated.watchAndInvoke(() => exampleDatasource, (__e) { __e1.xtag.datasource = __e.newValue; }));
  
  __e1.xtag..inserted()
  
  ..inserted_autogenerated();
  

}
