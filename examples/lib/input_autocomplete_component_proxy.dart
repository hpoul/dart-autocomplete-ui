// Auto-generated from input_autocomplete.html.
// DO NOT EDIT.

library tapo_input_autocomplete;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import '../_from_packages/autocomplete_ui/input_autocomplete.dart';
import 'dart:html';



class InputAutocompleteComponentProxy extends InputAutocompleteComponent {
  /** Autogenerated from the template. */

  autogenerated.ScopedCssMapper _css;

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("tapo-input-autocomplete");
  static final __html1 = new autogenerated.Element.html('<ul class="autocomplete-content">\n                <template></template>\n                <template></template>\n              </ul>'), __html2 = new autogenerated.Element.html('<li class="">\n                    <div></div>\n                    <!--content select=".choiceTemplate"></content-->\n                  </li>'), __html3 = new autogenerated.Element.html('<li>No matches.</li>'), __shadowTemplate = new autogenerated.DocumentFragment.html('''
        <div class="autocomplete-wrapper">
          <div class="autocomplete-content-wrapper-marker autocomplete-content-wrapper  ">
            <template></template>
          </div>
          <input type="text">
        </div>
        
      ''');
  autogenerated.DivElement __e13;
  autogenerated.Element __e12;
  autogenerated.InputElement __e14;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("tapo-input-autocomplete");
    setScopedCss("tapo-input-autocomplete", new autogenerated.ScopedCssMapper({".loading":"loading",".autocomplete-content-hidden":"autocomplete-content-hidden",".autocomplete-content":"autocomplete-content",".autocomplete-wrapper":"autocomplete-wrapper",".focused":"focused",".autocomplete-content-wrapper":"autocomplete-content-wrapper","tapo-input-autocomplete":"[is=\"tapo-input-autocomplete\"]"}));
    _css = getScopedCss("tapo-input-autocomplete");
    __t = new autogenerated.Template(__root);
    if (__root is autogenerated.ShadowRoot) __root.applyAuthorStyles = true;
    __root.nodes.add(__shadowTemplate.clone(true));
    __e13 = __root.nodes[1].nodes[1];
    __e12 = __e13.nodes[1];
    __t.conditional(__e12, () => inputHasFocus && filteredChoices != null, (__t) {
      var __e10, __e11, __e9;
      __e11 = __html1.clone(true);
      __e9 = __e11.nodes[1];
      __t.loop(__e9, () => filteredChoices, ($list, $index, __t) {
        var choice = $list[$index];
        var __e7, __e8;
        __e8 = __html2.clone(true);
        __e7 = __e8.nodes[1];
        var __binding6 = __t.contentBind(() =>  renderChoice(choice) , false);
        __e7.nodes.add(__binding6);
        __t.listen(__e8.onMouseDown, ($event) { mouseDownChoice(choice, $event); });
        __t.listen(__e8.onMouseOver, ($event) { mouseOverChoice(choice, $event); });
        __t.listen(__e8.onMouseUp, ($event) { selectChoice(choice); });
        __t.oneWayBind(() =>  choice.key , (e) { if (__e8.attributes['choice-key'] != e) __e8.attributes['choice-key'] = e; }, false, false);
        __t.bindClass(__e8, () =>  isFocused(choice) ? 'focused' : 'notfocused' , false);
      __t.addAll([new autogenerated.Text('\n                  '),
          __e8,
          new autogenerated.Text('\n                ')]);
      });
      __e10 = __e11.nodes[3];
      __t.conditional(__e10, () => filteredChoices.length == 0, (__t) {
      __t.addAll([new autogenerated.Text('\n                  '),
          __html3.clone(true),
          new autogenerated.Text('\n                ')]);
      });

    __t.addAll([new autogenerated.Text('\n              '),
        __e11,
        new autogenerated.Text('\n            ')]);
    });

    __t.bindClass(__e13, () =>  inputHasFocus && filteredChoices != null ? 'autocomplete-content-visible' : 'autocomplete-content-hidden' , false);
    __e14 = __root.nodes[1].nodes[3];
    __t.listen(__e14.onBlur, ($event) { inputBlur($event); });
    __t.listen(__e14.onFocus, ($event) { inputFocus($event); });
    __t.listen(__e14.onKeyDown, ($event) { $event = new autogenerated.KeyEvent($event); keyDown($event); });
    __t.listen(__e14.onKeyUp, ($event) { $event = new autogenerated.KeyEvent($event); keyUp($event); });
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e13 = __e12 = __e14 = null;
  }

  /** Original code from the component. */

}

//# sourceMappingURL=input_autocomplete_component_proxy.dart.map